name: CD Backend

on:
  push:
    branches: 
      - main
  workflow_dispatch:

# Define Environment 
env:
  PY_VERSION: 3.12.1
  IMAGE_NAME: backend
  IMAGE_TAG: latest

jobs:
  linting_job:
    name: linting job
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PY_VERSION}}
      
      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv flake8
  
      - name: Install project dependencies
        run: |
          pipenv install

  testing_job: 
    name: testing job
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Use Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.PY_VERSION}}
      
      - name: Install project dependencies to Tests
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pytest
  
      - name: Install project dependencies
        run: |
          pipenv install
  
      - name: Run tests in Backend
        run: | 
          pipenv run test

  build:
    name: building job
    needs: [linting_job, testing_job]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: AWS ERC Login
        uses: aws-actions/amazon-ecr-login@v2
        with: 
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Build Docker Image
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kubectl get svc
          docker build -t ${{env.IMAGE_NAME}} .
          docker tag ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
  
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Deploy to Kubernetes
        run: |
          cd k8s
          kustomize edit set image backend=${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          kustomize build | kubectl apply -f -