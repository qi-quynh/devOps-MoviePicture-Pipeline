name: CI Frontend 

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
# Define Environment
env:
  IMAGE_NAME: frontend
  NO_VERSION: 18.18.0

jobs:
  linting_job:
    name: linting job
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NO_VERSION}}
          
      - name: Cache
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        run: |
           npm ci
           npm install eslint --save-dev

      - name: Run lint
        run: |
          npm run lint
          
  testing_job:
    name: testing job
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NO_VERSION}}
      
      - name: Perform a cache action to restore cache before dependency install
        id: cache-npm-test
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
  
      - name: Install dependencies
        run: |
          npm ci
          npm install prettier --save-dev
  
      - name: Run test
        run: npm run test

  build:
    name: build job
    needs: [linting_job, testing_job]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Build Docker Image
        run: |
          docker build -t ${{env.IMAGE_NAME}}:latest .